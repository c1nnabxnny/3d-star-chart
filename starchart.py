"""
This script connects to the skyfield api. Skyfield computes positions for the stars, planets, and satellites 
in orbit around the Earth. Its results should agree with the positions generated by the United States Naval 
Observatory and their Astronomical Almanac to within 0.0005 arcseconds (half a “mas” or milliarcsecond).
This script scrapes data from the Hipparcos star catalogue to get the coordinates of all the stars in the database.
It converts the raw data into x,y,z coordinates that can be plotted on a scatterplot graph, then it charts all
the stars into a 3d scatterplot.
Made by c1nnabxnny
"""

from skyfield.api import Star, load
from skyfield.data import hipparcos
import matplotlib.pyplot as plt
import numpy as np

# Load the Hipparcos catalog data into a Pandas DataFrame
with load.open(hipparcos.URL) as f:
    df = hipparcos.load_dataframe(f)

# Extract right ascension and declination
ra = df['ra_degrees'].values # in degrees
dec = df['dec_degrees'].values # in degrees

# Extract parallax
parallax = df['parallax_mas'].values # in arcseconds

# Convert the celestial coordinates and parallax data to Cartesian coordinates
x = parallax * np.cos(np.deg2rad(dec)) * np.cos(np.deg2rad(ra))
y = parallax * np.cos(np.deg2rad(dec)) * np.sin(np.deg2rad(ra))
z = parallax * np.sin(np.deg2rad(dec))

# Write the coordinate data to a file (named coordinates.js)
with open('coordinates.js', 'w') as f:
  f.write('const coordinates = [')
  f.write(',\n'.join([f'[{x[i]}, {y[i]}, {z[i]}]' for i in range(len(x))]))
  f.write(']\n')
  f.write('module.exports = coordinates')


# Create the 3D scatter plot
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(x, y, z, c='b', marker='o')

# Customize the plot
ax.set_xlabel('X Coordinate')
ax.set_ylabel('Y Coordinate')
ax.set_zlabel('Z Coordinate')
ax.set_title('3D Scatter Plot of Hipparcos Stars')

plt.show()